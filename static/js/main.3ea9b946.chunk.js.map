{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","inputText","setTodos","todos","setStatus","onSubmit","event","preventDefault","text","completed","id","Math","random","type","className","value","onChange","target","autoComplete","name","Todo","item","todo","onClick","map","data","filter","element","TodoList","filtertodos","App","useState","status","setFilterTodos","useEffect","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.3ea9b946.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction Form({setInputText,inputText,setTodos,todos,setStatus}) {\r\n    const inputEventHandler = (event) => setInputText(event.target.value);\r\n    const submitTodoHandler = event => {\r\n        event.preventDefault();\r\n        setTodos([...todos,{\r\n            text:inputText,\r\n            completed:false,\r\n            id:Math.random()*1000,\r\n        }]);\r\n        setInputText(\"\");\r\n    }\r\n    const statusHandler = event => setStatus(event.target.value);\r\n    return (\r\n        <div>\r\n            <form onSubmit={submitTodoHandler}>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"todo-input\" \r\n                    value={inputText} \r\n                    onChange={inputEventHandler}\r\n                    autoComplete=\"off\"\r\n                />\r\n\r\n                <button className=\"todo-button\" type=\"submit\">\r\n                    <i className=\"fas fa-plus-square\"></i>\r\n                </button>\r\n\r\n                <div className=\"select\">\r\n                    <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                    </select>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\nfunction Todo({item,todos,setTodos,todo}) {\r\n    const deleteHandler = () => setTodos(todos.filter(element => element.id !== todo.id));\r\n    const completeHandler = () => {\r\n        setTodos(todos.map(data=>{\r\n            if(data.id === todo.id){\r\n                return {\r\n                    ...data, completed:!data.completed\r\n                }\r\n            }\r\n            return data;\r\n        }));\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"todo\">\r\n                <div className={`todo-item ${todo.completed && \"completed\"}`}>\r\n                    <li>{item}</li>\r\n                    <button className=\"complete-btn\" onClick={completeHandler}>\r\n                        <i className=\"fas fa-check\"></i>\r\n                    </button>\r\n                    <button className=\"trash-btn\" onClick={deleteHandler}>\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;\r\n","import React  from 'react';\r\nimport Todo from './Todo';\r\n\r\nfunction TodoList({setTodos,filtertodos}) {\r\n    \r\n    return (\r\n        <div>\r\n                <div className=\"todo-container\">\r\n                    <ul className=\"todo-list\">\r\n                        {filtertodos.map((todo)=>(\r\n                            <Todo \r\n                                todos={filtertodos}\r\n                                item={todo.text}\r\n                                setTodos={setTodos}\r\n                                key={todo.id}\r\n                                todo={todo}\r\n                             />\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;\r\n","import React, {useState,useEffect} from \"react\";\nimport './App.css';\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n \n  const [inputText,setInputText]=useState(\"\");\n  const [todos,setTodos]=useState([]);\n  const [status,setStatus]=useState(\"all\");\n  const [filtertodos,setFilterTodos]=useState([]);\n\n  useEffect(()=>{filterHandler()},[status,todos]);\n \n  const filterHandler = () => {\n    switch(status){\n      case \"completed\":\n        setFilterTodos(todos.filter(todo=> todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilterTodos(todos.filter(todo=> todo.completed === false));\n        break;\n      default:\n        setFilterTodos(todos);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Todo List</h1>\n      </header>\n      <Form setInputText={setInputText} inputText={inputText} setTodos={setTodos} todos={todos} setStatus={setStatus}/>\n      <TodoList todos={todos} setTodos={setTodos} filtertodos={filtertodos}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}